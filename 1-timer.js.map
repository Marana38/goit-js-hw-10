{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startButton = document.querySelector('button[data-start]');\nconst dateInput = document.getElementById('datetime-picker');\nconst timerFields = {\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]')\n};\n\nlet userSelectedDate;\nlet timerId;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate <= new Date()) {\n            iziToast.error({ title: \"Error\", message: \"Please choose a date in the future\" });\n            startButton.disabled = true;\n        } else {\n            userSelectedDate = selectedDate;\n            startButton.disabled = false;\n        }\n    }\n};\n\nflatpickr(dateInput, options);\n\nstartButton.addEventListener('click', () => {\n    startButton.disabled = true;\n    dateInput.disabled = true;\n    timerId = setInterval(() => updateTimer(), 1000);\n});\n\nfunction updateTimer() {\n    const timeRemaining = userSelectedDate - new Date();\n    if (timeRemaining <= 0) {\n        clearInterval(timerId);\n        startButton.disabled = false;\n        dateInput.disabled = false;\n        return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n    timerFields.days.textContent = addLeadingZero(days);\n    timerFields.hours.textContent = addLeadingZero(hours);\n    timerFields.minutes.textContent = addLeadingZero(minutes);\n    timerFields.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n"],"names":["startButton","dateInput","timerFields","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","updateTimer","timeRemaining","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"2FAKA,MAAMA,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAY,SAAS,eAAe,iBAAiB,EACrDC,EAAc,CAChB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACpD,EAEA,IAAIC,EACAC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACpBC,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,EAChFR,EAAY,SAAW,KAEvBG,EAAmBI,EACnBP,EAAY,SAAW,GAE9B,CACL,EAEAS,EAAUR,EAAWI,CAAO,EAE5BL,EAAY,iBAAiB,QAAS,IAAM,CACxCA,EAAY,SAAW,GACvBC,EAAU,SAAW,GACrBG,EAAU,YAAY,IAAMM,EAAa,EAAE,GAAI,CACnD,CAAC,EAED,SAASA,GAAc,CACnB,MAAMC,EAAgBR,EAAmB,IAAI,KAC7C,GAAIQ,GAAiB,EAAG,CACpB,cAAcP,CAAO,EACrBJ,EAAY,SAAW,GACvBC,EAAU,SAAW,GACrB,MACH,CAED,KAAM,CAAE,KAAAW,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAa,EACjET,EAAY,KAAK,YAAce,EAAeL,CAAI,EAClDV,EAAY,MAAM,YAAce,EAAeJ,CAAK,EACpDX,EAAY,QAAQ,YAAce,EAAeH,CAAO,EACxDZ,EAAY,QAAQ,YAAce,EAAeF,CAAO,CAC5D,CAEA,SAASC,EAAUE,EAAI,CAMnB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASE,EAAeE,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}